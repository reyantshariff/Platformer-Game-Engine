<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>CompSci308_2025Spring</groupId>
  <artifactId>oogasalad_team02</artifactId>
  <version>1.0.0</version>
  <packaging>jar</packaging>

  <!-- set up name for repeated values to make it easy to change -->
  <properties>
    <project.build.java.version>21</project.build.java.version>
    <project.test.junit.version>5.11.4</project.test.junit.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <!-- this is necessary to get surefire, jacaco, and testfx to all play nicely -->
    <argLine></argLine>
  </properties>

  <dependencies>

    <!-- framework for database storage -->
    <dependency>
      <groupId>com.google.firebase</groupId>
      <artifactId>firebase-admin</artifactId>
      <version>9.2.0</version>
    </dependency>

    <!-- framework for parsing and writing JSON -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.18.3</version>
    </dependency>
    <!-- framework for writing repeatable tests by using assertions about your code's values -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${project.test.junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- allow parameterized tests to more concisely check several values -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${project.test.junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- provides testing for JavaFX by simulating user interactions and checking using JUnit assertions -->
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>testfx-junit5</artifactId>
      <version>4.0.18</version>
      <scope>test</scope>
    </dependency>
    <!-- allows javafx testing without seeing tests run -->
    <dependency>
      <groupId>org.testfx</groupId>
      <artifactId>openjfx-monocle</artifactId>
      <version>21.0.2</version>
      <scope>test</scope>
    </dependency>
    <!-- use logging instead of println to report important information -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.24.3</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- compiles project source code using correct version and flags -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <source>${project.build.java.version}</source>
          <target>${project.build.java.version}</target>
        </configuration>
      </plugin>
      <!-- used to execute the unit tests of an application and generate a report -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.2</version>
        <configuration>
          <failIfNoTests>true</failIfNoTests>
          <skipTests>false</skipTests>
          <argLine>
            @{argLine}
            -XX:+EnableDynamicAgentLoading
            --add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
            --add-exports javafx.graphics/com.sun.javafx.util=ALL-UNNAMED
            --add-exports javafx.base/com.sun.javafx.logging=ALL-UNNAMED
            --add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
            --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
          </argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>test</phase>
          </execution>
        </executions>
      </plugin>
      <!-- check for violations of code style -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>10.21.2</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <violationSeverity>error</violationSeverity>
          <includeTestResources>false</includeTestResources>
          <failOnViolation>false</failOnViolation>
          <consoleOutput>true</consoleOutput>
          <outputFileFormat>xml</outputFileFormat>
          <outputFile>${project.build.directory}/checkstyle-result.xml</outputFile>
          <suppressionsLocation>.comments.xml</suppressionsLocation>
          <linkXRef>false</linkXRef>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- generates nice looking reports -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.8.0</version>
      </plugin>
      <!-- code coverage with jacoco -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <executions>
          <execution>
            <id>prepare</id>
            <phase>test-compile</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- generates site for the current project to display reports -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.21.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.6.0</version>
      </plugin>
      <!-- executes PMD rules -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.26.0</version>
        <executions>
          <execution>
            <id>pmd</id>
            <phase>validate</phase>
            <goals>
              <goal>pmd</goal>
            </goals>
          </execution>
          <execution>
            <id>cpd</id>
            <phase>validate</phase>
            <goals>
              <goal>cpd</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rulesets>
            <ruleset>.oogasalad_pmd.xml</ruleset>
          </rulesets>
          <failurePriority>2</failurePriority>
          <minimumTokens>60</minimumTokens>
          <includeTests>false</includeTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.11.2</version>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <configLocation>google_checks.xml</configLocation>
          <violationSeverity>error</violationSeverity>
          <includeTestResources>false</includeTestResources>
          <failOnViolation>false</failOnViolation>
          <consoleOutput>true</consoleOutput>
          <outputFileFormat>xml</outputFileFormat>
          <outputFile>${project.build.directory}/checkstyle-result.xml</outputFile>
          <suppressionsLocation>.comments.xml</suppressionsLocation>
          <linkXRef>false</linkXRef>
        </configuration>
      </plugin>
      <!-- generates javadoc as a report -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.11.2</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>javadoc</report>
            </reports>
            <configuration>
              <failOnError>false</failOnError>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.26.0</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>pmd</report>
              <report>cpd</report>
            </reports>
            <configuration>
              <rulesets>
                <ruleset>.oogasalad_pmd.xml</ruleset>
              </rulesets>
              <failurePriority>2</failurePriority>
              <minimumTokens>60</minimumTokens>
              <includeTests>false</includeTests>
            </configuration>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.6.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.2</version>
      </plugin>
      <!-- generates report on test coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
</project>
